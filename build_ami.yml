- hosts: amibuilder
  tasks:
  - name: launch temporary instance
    ec2:
      assign_public_ip: yes
      region: "{{ region }}"
      key_name: "{{ key_name }}"
      group_id: "{{ group_id }}"
      instance_type: t2.micro
      vpc_subnet_id: "{{ vpc_subnet_id }}"
      image: "{{ base_image }}"
      wait: yes
      wait_timeout: 500
      exact_count: 1
      count_tag:
         role: ami_builder
      instance_tags:
         role: ami_builder
    register: ami_instance

  - name: waiting for ssh to start
    wait_for: port=22 host={{ ami_instance.tagged_instances.0.public_ip }} timeout=300
              search_regex=OpenSSH

  - name: add host to group
    add_host: name={{ ami_instance.tagged_instances.0.public_ip }} groups=just_created ansible_ssh_private_key_file={{ private_pem  }}

- hosts: just_created
  remote_user: ubuntu
  roles:
    - apache

- hosts: amibuilder
  tasks:

  - name: bundle ami
    action: 
      module: ec2_ami
      instance_id: "{{ ami_instance.tagged_instances.0.id }}"
      region: "{{ region }}"
      state: present
      description: This was provisioned {{ ansible_date_time.iso8601 }}
      name: myappami-{{ ansible_date_time.epoch }}
      wait: yes
    register: amioutput

  - name: terminate temporary instance
    action:
      module: ec2
      state: absent
      region: "{{ region }}"
      instance_ids: "{{ ami_instance.tagged_instances.0.id }}"

  - name: create vars file with  new ami info
    copy:
      dest: vars/settings.yml
      content: |
             image_id: {{ amioutput.image_id }}
             lc_suffix: {{ ansible_date_time.epoch }}
    when: deploy is defined and deploy|bool == True
